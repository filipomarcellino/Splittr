{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lq262\\\\Desktop\\\\Splittr\\\\cmpt276-final-project\\\\frontend\\\\src\\\\pages\\\\Admin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../stylesheets/admin.css\";\nimport axios from \"axios\";\nimport PopUpForm from \"../components/admin/PopUpForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Admin = () => {\n  _s();\n\n  //init variables\n  const [accounts, setAccounts] = useState([]);\n  const [visibility, setVisibility] = useState(false);\n  const [id, setID] = useState();\n  const [username, setUsername] = useState();\n  const [nickname, setNickname] = useState();\n  const [input, setInput] = useState();\n  const [option, setOption] = useState(\"\");\n\n  const popupCloseHandler = e => {\n    setVisibility(e);\n  }; //get the data for popup form\n\n\n  const dataForForm = (id, username, nickname) => {\n    setID(id);\n    setUsername(username);\n    setNickname(nickname);\n  }; //fetch the accounts data\n\n\n  const fetchAccounts = async () => {\n    const res = await axios.get(\"/admindata/accounts\").then(res => {\n      setAccounts(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }; //change data in database\n\n\n  const handleChange = async e => {\n    const userObject = {\n      input,\n      id\n    };\n    console.log(userObject);\n    await axios.post(\"/admindata\" + option, userObject).then(res => {\n      console.log(res.data);\n\n      if (res.data.login) {\n        setInput(\"\");\n      } else {\n        setErrMsg(res.data.status);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    fetchAccounts();\n  }, []); //HTML render out\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin\",\n    children: [/*#__PURE__*/_jsxDEV(PopUpForm, {\n      onClose: popupCloseHandler,\n      show: visibility,\n      title: \"User ID - \" + id,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"content\",\n        placeholder: \"Content\",\n        autoComplete: \"off\",\n        onChange: e => setInput(e.target.input),\n        value: input,\n        required: true,\n        maxLength: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"option\",\n        onClick: e => {\n          setOption(\"/modify/nickname\");\n          handleChange(e);\n        },\n        children: \"Change Nickname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"option\",\n        children: \"Change Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"option\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"delete\",\n        children: \"Delete User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Manage Splittr Accounts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nick Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Operations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: accounts.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: e => {\n                  dataForForm(item.id, item.username, item.nickname);\n                  setVisibility(!visibility);\n                },\n                children: \"Modify\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Admin, \"CbfHLqb73IoKwFjzKxPuu5UMcT8=\");\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","axios","PopUpForm","Admin","accounts","setAccounts","visibility","setVisibility","id","setID","username","setUsername","nickname","setNickname","input","setInput","option","setOption","popupCloseHandler","e","dataForForm","fetchAccounts","res","get","then","data","catch","error","console","log","handleChange","userObject","post","login","setErrMsg","status","target","map","item"],"sources":["C:/Users/lq262/Desktop/Splittr/cmpt276-final-project/frontend/src/pages/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../stylesheets/admin.css\";\r\nimport axios from \"axios\";\r\nimport PopUpForm from \"../components/admin/PopUpForm\";\r\n\r\nconst Admin = () => {\r\n  //init variables\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [visibility, setVisibility] = useState(false);\r\n\r\n  const [id, setID] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [nickname, setNickname] = useState();\r\n\r\n  const [input, setInput] = useState();\r\n  const [option, setOption] = useState(\"\");\r\n\r\n  const popupCloseHandler = (e) => {\r\n    setVisibility(e);\r\n  };\r\n\r\n  //get the data for popup form\r\n  const dataForForm = (id, username, nickname) => {\r\n    setID(id);\r\n    setUsername(username);\r\n    setNickname(nickname);\r\n  };\r\n\r\n  //fetch the accounts data\r\n  const fetchAccounts = async () => {\r\n    const res = await axios\r\n      .get(\"/admindata/accounts\")\r\n      .then((res) => {\r\n        setAccounts(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  //change data in database\r\n  const handleChange = async (e) => {\r\n    const userObject = {\r\n      input,id\r\n    };\r\n\r\n    console.log(userObject);\r\n    await axios\r\n      .post(\"/admindata\" + option, userObject)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n\r\n        if (res.data.login) {\r\n          setInput(\"\");\r\n        } else {\r\n          setErrMsg(res.data.status);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchAccounts();\r\n  }, []);\r\n\r\n  //HTML render out\r\n  return (\r\n    <div className=\"admin\">\r\n      <PopUpForm\r\n        onClose={popupCloseHandler}\r\n        show={visibility}\r\n        title={\"User ID - \" + id}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          name=\"content\"\r\n          placeholder=\"Content\"\r\n          autoComplete=\"off\"\r\n          onChange={(e) => setInput(e.target.input)}\r\n          value={input}\r\n          required\r\n          maxLength={20}\r\n        />\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"option\"\r\n          onClick={(e) => {\r\n            setOption(\"/modify/nickname\");\r\n            handleChange(e);\r\n          }}\r\n        >\r\n          Change Nickname\r\n        </button>\r\n        <button type=\"button\" className=\"option\">\r\n          Change Username\r\n        </button>\r\n        <button type=\"button\" className=\"option\">\r\n          Change Password\r\n        </button>\r\n        <button type=\"button\" className=\"delete\">\r\n          Delete User\r\n        </button>\r\n      </PopUpForm>\r\n      <div>\r\n        <h1>Manage Splittr Accounts</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Nick Name</th>\r\n              <th>Username</th>\r\n              <th>Operations</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {accounts.map((item) => (\r\n              <tr key={item.id}>\r\n                <td>{item.id}</td>\r\n                <td>{item.nickname}</td>\r\n                <td>{item.username}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={(e) => {\r\n                      dataForForm(item.id, item.username, item.nickname);\r\n                      setVisibility(!visibility);\r\n                    }}\r\n                  >\r\n                    Modify\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Admin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}